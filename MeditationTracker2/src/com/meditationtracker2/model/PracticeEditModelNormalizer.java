package com.meditationtracker2.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.meditationtracker2.model.binder.ModelNormalizer;
import com.meditationtracker2.model.binder.Parsers;

//TODO: this will be autogenerated by the Bandera-compile
public class PracticeEditModelNormalizer implements ModelNormalizer {

	private final PracticeEditModel model;

	public PracticeEditModelNormalizer(final PracticeEditModel model) {
		this.model = model;
	}
	
	@Override
	public Object[] getModelValues() {
		List<Object> result = new ArrayList<Object>();
		
		
		result.add(model.getCurrentCount());
		result.add(model.getScheduledForToday());
		result.add(model.getTotalCount());
		result.add(model.getImageUri());
		result.add(model.getScheduledCompletion());
		result.add(model.getTitle());
		
		return result.toArray();
	}

	@Override
	public void setModelValue(final Object newValue, final int position) {
		switch(position) {
		case 0:
			// target setter is int, mapped to textfield - parse
			model.setCurrentCount(Parsers.SafeParse(newValue, model.getCurrentCount()));  
			break;
		case 1:
			model.setScheduledForToday(Parsers.SafeParse(newValue, model.getScheduledForToday()));
			break;
		case 2:
			model.setTotalCount(Parsers.SafeParse(newValue, model.getTotalCount()));
			break;
		case 3:
			break;
		case 4:
			// target setter is Date, mapped to DatePicker - cast
			model.setScheduledCompletion((Date)newValue);
			break;
		case 5:
			// target setter is string, mapped to textfield - cast
			model.setTitle((String) newValue);
			break;
		}
	}

}
